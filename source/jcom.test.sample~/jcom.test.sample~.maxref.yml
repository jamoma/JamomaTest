title: j.test.sample~
author: [Jamoma]
created_at: 2012/7/7
tags: [testing, msp]

brief: MSP component for unit tetsing in Max 

desc: >
 j.test.sample~ is similar to C74's snapshot~ but with predictable results in the test context

inlets:
  - id: 0
    type: MSP
    desc: Audio signal to be cpatured	
  - id: 0
    type: bang
    desc: triggers capturing 

outlets:
 - id: 0
   type: float/list
   desc: max message with captured audio samples

outputs:
 - name: float
   desc: A single captured sample  
 - name: list
   desc: A list of captured samples
   
attributes:
 - name: armed
   type: boolean
   desc: by default the sampling starts when the DSP is switched on. @armed 0 prevents this. An additional bang is necessary to activate the sampling process 
   default: 1
 - name: count	
   type: int
   desc: The number of consecutive samples that will be grabbed, maximum is 64
   default: 1
 - name: offset
   type: int 
   desc: by default the first sample in the block is sampled. by using @offset a sample-wise offset can be added
   default: 0
 - name: deferblocks
   type: int
   desc: waiting a number of MSP signal blocks before grabbing a sample
   default: 0


seealso:
 - snapshot~
 - j.test.assert.equal	
 - j.test.finish
 - j.test.start
 - j.test.manager

discussion: Jamoma is a free and open source project. http://www.jamoma.org 
